when we want to initialize the git we need to run
# git init
.git folder will be created
then we can run the git commands and also it acts as a local rep

the imp commands in the git as discussed in first day class 
#git add >to  move the files from working area to staging
#git add <filename> for specific file
#git add . all the files in that dir
#git commit -m "comment msg" it is used to move from staging to local repo
#git commit -m "comment " <filename> specific file to commit
#git commit -am "comment" we can use this on  the already commited files if we do any modification on the content

Before going to commit we need to configure the below steps imp
======================
#git config --global user.name " "
#git config --global user.email " "

for checking
#git config --global --list

once its done
=======================
we need to add the github (remote repo) to our local repo(know as master )the steps for that
first we need to verify the remote repo is showing or not in our local
git remote -v

if its not showing anything then perform the below steps
#git remote add <origin> <remote repor url >

in the place of origin we can keep alias as anything i given name as
#git remote add Swiss <remote repo https or ssh>

=================================
perfom the push to send the code from local to remote

#git push Swiss master
once its done

we need to verify that
#git log
#git log -1
the commit history it will show

if we want to know the content in that commit
#git show <commit id>

to show only the content name in the commit
#git show --pretty=" " --name  -only <commitid>
==================================


moving the content from staging area to working area 
#git reset <filename>
#git reset all files will be done

to delete the commited data from local repo  
#git revert <commit id>

==========
to remove all the files from working area 
#git clean
#git clean -n 
#git clean -f

=======
to get back from staging to workingarea
#git reset --hard

====================
 move the data that is modified in the working area  to staging area

#git add -u

#git cat-file  -p <commitid> to know the process flow

